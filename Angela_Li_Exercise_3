### initializing the packages Pyplot and JLD
using PyPlot; using JLD

A.
### 1Aa. loading the image into Julia, displaying it in a figure, and computing its size
elcapitan = imread("el-capitan.png")
imshow(convert(Array{Float32, 3}, elcapitan))
size(elcapitan)
### output
(360, 640, 4)
### see elcapitan.png in GitHub

### 1Ab.
"""
extract() -- load and show image and return red, blue, and green channels as 3 separate variables
This function takes the name of an image as a string input and loads and shows the image. The
function extracts the red, blue, and green channels into 3 separate variables and
returns the values of the 3 variables.

Args:
   imagename (string): name of the image

Returns:
   red (matrix of floats): the red channel
   blue (matrix of floats): the blue channel
   green (matrix of floats): the green channel
"""
function extract(imagename)
    imagename = imread(imagename)
    imshow(convert(Array{Float32, 3}, imagename))
    red = imagename[:,:,1]
    green = imagename[:,:,2]
    blue = imagename[:,:,3]
    return red, green, blue
end
### running the function
red, green, blue = extract("el-capitan.png")
### output
(Float32[0.796078 0.796078 … 0.533333 0.52549; 0.803922 0.803922 … 0.541176 0.533333; … ; 0.0980392 0.0100000 … 0.0156863 0.00784314; 0
.0509804 0.0627451 … 0.0196078 0.0313726], Float32[0.54902 0.54902 … 0.568627 0.560784; 0.552941 0.556863 … 0.576471 0.568627; … ; 0.14
902 0.145098 … 0.0156863 0.00784314; 0.113725 0.12549 … 0.0196078 0.0313726], Float32[0.380392 0.380392 … 0.690196 0.682353; 0.388235 0
.388235 … 0.698039 0.690196; … ; 0.109804 0.105882 … 0.0235294 0.0156863; 0.0705882 0.0823529 … 0.027451 0.0392157])
### calling the variable red
red
360×640 Array{Float32,2}:
 0.796078   0.796078   0.788235   0.776471   0.776471   0.776471   …  0.537255    0.533333    0.533333   0.533333    0.52549
 0.803922   0.803922   0.8        0.792157   0.788235   0.792157      0.541176    0.541176    0.541176   0.541176    0.533333
 0.8        0.803922   0.803922   0.8        0.803922   0.811765      0.545098    0.545098    0.545098   0.545098    0.537255
 0.803922   0.811765   0.815686   0.811765   0.819608   0.827451      0.545098    0.541176    0.545098   0.545098    0.537255
 0.8        0.811765   0.819608   0.819608   0.827451   0.831373      0.54902     0.54902     0.54902    0.545098    0.533333
 0.796078   0.803922   0.811765   0.815686   0.827451   0.831373   …  0.54902     0.545098    0.545098   0.541176    0.537255
 ⋮                                                      ⋮          ⋱  ⋮
 0.054902   0.0745098  0.054902   0.0588235  0.0509804  0.0823529     0.0156863   0.0313726   0.0313726  0.0470588   0.054902
 0.0509804  0.0431373  0.0392157  0.054902   0.0588235  0.129412   …  0.0         0.027451    0.0509804  0.00784314  0.0470588
 0.0588235  0.0509804  0.054902   0.0509804  0.105882   0.113725      0.00392157  0.0156863   0.0235294  0.0156863   0.0156863
 0.0862745  0.0901961  0.0823529  0.0980392  0.152941   0.133333      0.00392157  0.0         0.0196078  0.0196078   0.0117647
 0.0980392  0.0901961  0.0784314  0.109804   0.117647   0.12549       0.0156863   0.00784314  0.0117647  0.0156863   0.00784314
 0.0509804  0.0627451  0.0235294  0.0196078  0.0705882  0.109804      0.0313726   0.00392157  0.0        0.0196078   0.0313726
### calling the variable green
green
360×640 Array{Float32,2}:
 0.54902    0.54902    0.541176   0.529412   0.529412   0.529412  0.537255  …  0.572549    0.568627    0.568627   0.568627    0.560784
 0.552941   0.556863   0.552941   0.545098   0.541176   0.545098  0.54902      0.576471    0.576471    0.576471   0.576471    0.568627
 0.552941   0.556863   0.556863   0.552941   0.556863   0.564706  0.568627     0.580392    0.580392    0.580392   0.580392    0.572549
 0.556863   0.564706   0.568627   0.564706   0.572549   0.580392  0.580392     0.580392    0.576471    0.580392   0.576471    0.572549
 0.552941   0.564706   0.572549   0.572549   0.580392   0.584314  0.584314     0.584314    0.584314    0.584314   0.580392    0.568627
 0.54902    0.556863   0.564706   0.568627   0.580392   0.584314  0.584314  …  0.584314    0.580392    0.580392   0.576471    0.572549
 ⋮                                                      ⋮                   ⋱  ⋮
 0.0862745  0.101961   0.0823529  0.0901961  0.0784314  0.109804  0.211765     0.0156863   0.0313726   0.0313726  0.0470588   0.054902
 0.0862745  0.0784314  0.0705882  0.0862745  0.0941176  0.164706  0.207843  …  0.0         0.027451    0.0509804  0.00784314  0.0470588
 0.101961   0.0980392  0.0980392  0.0941176  0.14902    0.160784  0.160784     0.00392157  0.0156863   0.0235294  0.0156863   0.0156863
 0.137255   0.137255   0.133333   0.14902    0.203922   0.180392  0.156863     0.00392157  0.0         0.0196078  0.0196078   0.0117647
 0.14902    0.145098   0.129412   0.160784   0.168627   0.180392  0.141176     0.0156863   0.00784314  0.0117647  0.0156863   0.00784314
 0.113725   0.12549    0.0862745  0.0784314  0.133333   0.172549  0.117647     0.0313726   0.00392157  0.0        0.0196078   0.0313726
### calling the variable blue
blue
360×640 Array{Float32,2}:
 0.380392   0.380392   0.372549   0.364706   0.368627   0.368627   …  0.694118    0.690196    0.690196    0.690196   0.682353
 0.388235   0.388235   0.384314   0.376471   0.376471   0.384314      0.698039    0.698039    0.698039    0.698039   0.690196
 0.384314   0.388235   0.388235   0.384314   0.396078   0.403922      0.701961    0.701961    0.701961    0.701961   0.694118
 0.388235   0.396078   0.4        0.4        0.407843   0.419608      0.701961    0.698039    0.701961    0.701961   0.694118
 0.384314   0.396078   0.403922   0.403922   0.419608   0.423529      0.705882    0.705882    0.705882    0.701961   0.690196
 0.380392   0.388235   0.396078   0.403922   0.419608   0.423529   …  0.705882    0.701961    0.701961    0.698039   0.694118
 ⋮                                                      ⋮          ⋱  ⋮
 0.054902   0.0705882  0.0588235  0.0705882  0.054902   0.0784314     0.0235294   0.0431373   0.0392157   0.054902   0.0627451
 0.054902   0.0431373  0.0470588  0.0666667  0.0666667  0.129412   …  0.00784314  0.0352941   0.0588235   0.0156863  0.054902
 0.0666667  0.0627451  0.0705882  0.0705882  0.117647   0.121569      0.0117647   0.0235294   0.0313726   0.0235294  0.0235294
 0.0980392  0.0980392  0.0980392  0.121569   0.172549   0.141176      0.0117647   0.00784314  0.027451    0.027451   0.0196078
 0.109804   0.105882   0.0980392  0.133333   0.137255   0.137255      0.0235294   0.0156863   0.0196078   0.0235294  0.0156863
 0.0705882  0.0823529  0.0509804  0.0509804  0.0980392  0.129412      0.0392157   0.0117647   0.00784314  0.027451   0.0392157

### 1Ac. the same function as 1Ab but also prints BUG BUG BUG
function extract(imagename)
    imagename = imread(imagename)
    imshow(convert(Array{Float32, 3}, imagename))
    red = imagename[:,:,1]
    green = imagename[:,:,2]
    blue = imagename[:,:,3]
    println("BUG BUG BUG")
    return red, green, blue
end
### running the function
extract("el-capitan.png")
### output
BUG BUG BUG
(Float32[0.796078 0.796078 … 0.533333 0.52549; 0.803922 0.803922 … 0.541176 0.533333; … ; 0.0980392 0.0901961 … 0.0156863 0.00784314; 0
.0509804 0.0100000 … 0.0196078 0.0313726], Float32[0.54902 0.54902 … 0.568627 0.560784; 0.552941 0.556863 … 0.576471 0.568627; … ; 0.14
902 0.145098 … 0.0156863 0.00784314; 0.113725 0.12549 … 0.0196078 0.0313726], Float32[0.380392 0.380392 … 0.690196 0.682353; 0.388235 0
.388235 … 0.698039 0.690196; … ; 0.109804 0.105882 … 0.0235294 0.0156863; 0.0705882 0.0823529 … 0.027451 0.0392157])

### 1Ad. same function as in 1Ab but after git reset
function extract(imagename)
    imagename = imread(imagename)
    imshow(convert(Array{Float32, 3}, imagename))
    red = imagename[:,:,1]
    green = imagename[:,:,2]
    blue = imagename[:,:,3]
    println("Reset with git reset -- mixed")
    return red, green, blue
end
### running the function
extract("el-capitan.png")
### output
Reset with git reset -- mixed
(Float32[0.796078 0.796078 … 0.533333 0.52549; 0.803922 0.803922 … 0.541176 0.533333; … ; 0.0980392 0.0901961 … 0.0156863 0.00784314; 0
.0509804 0.0627451 … 0.0196078 0.0313726], Float32[0.54902 0.54902 … 0.568627 0.560784; 0.552941 0.556863 … 0.576471 0.568627; … ; 0.14
902 0.145098 … 0.0156863 0.00784314; 0.113725 0.12549 … 0.0196078 0.0313726], Float32[0.380392 0.380392 … 0.690196 0.682353; 0.388235 0
.388235 … 0.698039 0.690196; … ; 0.109804 0.105882 … 0.0235294 0.0156863; 0.0705882 0.0823529 … 0.027451 0.0392157])

### The value of reset is being able to go back to your original code before the bug.

### 1Ae. making a new 360x640x3 matrix of zeroes
image2 = zeros(360,640,3)
360×640×3 Array{Float64,3}:

### setting dimensions of image2 to the G, B, R channel from el-capitan.png
image2[:,:,1] = elcapitan[:,:,2]
image2[:,:,2] = elcapitan[:,:,3]
image2[:,:,3] = elcapitan[:,:,1]

### plotting the two images side by side
### sizing, naming, and turning off the axis of the images
figure(figsize=[5,5])
subplot(1,2,1); imshow(elcapitan); title("Original"); axis("off")
subplot(1,2,2); imshow(image2); title("Purple"); axis("off")
### see 2 elcapitans.png and titled.png


B.
"""
rotation() -- load image and shift the rows of pixels circularly by a certain number (indicated by shiftrows)
This function takes the name of an image as a string input and loads it. The function then
moves a certain number of rows (indicated by shiftrows) up such that the top rows now become
the bottom rows and the bottom rows become the top rows.

Args:
   name (string): name of the image
   shiftrows (int): number of rows to shift the image by

Returns:
   shiftedimage (image): shifted image
"""
function rotation(name, shiftrows)
    name = imread(name)
    red = name[:,:,1]
    newimage = circshift(red, (-shiftrows,0))
    return imshow(newimage)
end
### running the function
rotation("el-capitan.png", 180)
### see shifted elcapitan.png in GitHub
### displaying the original and the shifted figure side by side
subplot(1,2,1); imshow(elcapitan[:,:,1]); title("Original"); axis("off")
subplot(1,2,2); rotation("el-capitan.png", 180); title("Shifted"); axis("off")
### see original and shifted.png in GitHub

### same function but without using circshift or for loop
function rotating(name, shiftrows)
    name = imread(name)
    red = name[:,:,1]
        newimg = zeros(360,640)
        newimg[1:end-shiftrows,:] = red[shiftrows+1:end,:]
        newimg[end-shiftrows+1:end,:] = red[1:shiftrows,:]
        return imshow(newimg)
end

### same function without using circshift but using a for loop
function shift(name, shiftrows)
    name = imread(name)
    red = name[:,:,1]
    newimg = zeros(360,640)
    for i = 1:shiftrows
        global newimg[end-shiftrows+i,:] = red[i,:]
        global newimg[i:end-shiftrows,:] = red[shiftrows+i:end,:]
    end
    return imshow(newimg)
end
